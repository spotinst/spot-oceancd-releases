apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
---
apiVersion: v1
kind: Secret
metadata:
  namespace: argo-rollouts
  name: argo-rollouts-notification-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
    spec:
      containers:
      - image: public.ecr.aws/k3o7w5d5/argo-rollouts
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: argo-rollouts
        ports:
        - containerPort: 8090
          name: metrics
        - containerPort: 8080
          name: healthz
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-rollouts